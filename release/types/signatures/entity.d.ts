/*!
 * Copyright (C) 2019 Silas B. Domingos
 * This source code is licensed under the MIT License as described in the file LICENSE.
 */
import * as Class from '@singleware/class';
import * as Integrations from '../integrations';
import * as Types from './types';
import * as Responses from './responses';
/**
 * Signature entity class.
 */
export declare class Entity extends Class.Null {
    /**
     * Email of user sending the SignRequest (must be a validated email)
     * Between 1 and 255 characters.
     */
    fromEmail?: string | null;
    /**
     * Name to be used in the From email header, e.g. {from_email_name} <no-reply@signrequest.com>
     * Max 255 characters.
     */
    fromEmailName?: string | null;
    /**
     * Have the sender of a SignRequest prepare the document before sending the request out.
     * @see https://signrequest.com/api/v1/docs/#section/Preparing-a-document/Prepare-using-the-web-interface
     */
    isBeingPrepared?: boolean | null;
    /**
     * URL to prepare the document.
     * Min 1 character.
     */
    prepareUrl?: string | null;
    /**
     * URL at which SignRequest will redirect to when a document is signed.
     * Max 2100 characters.
     */
    redirectUrl?: string | null;
    /**
     * URL at which SignRequest will redirect to when a document is declined.
     * Max 2100 characters.
     */
    redirectUrlDeclined?: string | null;
    /**
     * Attachments that signers are required to upload.
     */
    requiredAttachments?: Responses.Internals.Attachment[];
    /**
     * Disable uploading/adding of attachments.
     */
    disableAttachments?: boolean;
    /**
     * Disable usage of signatures generated by typing (text).
     */
    disableTextSignatures?: boolean;
    /**
     * Disable adding of text.
     */
    disableText?: boolean;
    /**
     * Disable adding of dates.
     */
    disableDate?: boolean;
    /**
     * Disable all SignRequest status emails as well as the email that contains the signed documents.
     */
    disableEmails?: boolean;
    /**
     * Disable usage of uploaded signatures (images).
     */
    disableUploadSignatures?: boolean;
    /**
     * Disables storing timestamp proof hashes in blockchain integrations.
     */
    disableBlockchainProof?: boolean | null;
    /**
     * When true a text message verification is needed before the signer can see the document.
     */
    textMessageVerificationLocked?: boolean | null;
    /**
     * Subject of SignRequest email.
     * Max 512 characters.
     */
    subject?: string | null;
    /**
     * Message to include in SignRequest email, may contain the following html tags:
     * a, abbr, acronym, b, blockquote, code, em, i, ul, li, ol, and strong
     */
    message?: string | null;
    /**
     * Who is signing.
     */
    who?: Types.Who | null;
    /**
     * Automatically remind signers to sign a document.
     */
    sendReminders?: boolean;
    /**
     * Document signers.
     */
    signers: Responses.Internals.Signer[];
    /**
     * Document Id.
     * Max 36 characters.
     */
    uuid: string;
    /**
     * Sign request URL.
     */
    url?: string | null;
    /**
     * Document URL.
     */
    document: string;
    /**
     * Integration type.
     */
    integration?: Integrations.Types | null;
    /**
     * Integration data.
     */
    integrationData?: string | null;
}
